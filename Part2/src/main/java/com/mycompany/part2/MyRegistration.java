
package com.mycompany.part2;

import javax.swing.JOptionPane;



/**
 *
 * @author RC_Student_lab
 */
public class MyRegistration extends javax.swing.JFrame {
    
    
    //Test if txtUsername and Password is the same as one used in Login
    String Username;
    String CellNumber;
    String Password;
    String storeUsername;
    String storePassword;
    
    

    /**
     * Creates new form MyRegistration
     */
    public MyRegistration() {
        initComponents();
        
        //setup the form
        setTitle("Registration");
        setSize(500,400);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCellNumber = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnRegister = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Username");

        jLabel2.setText("First Name");

        jLabel3.setText("Last Name");

        jLabel4.setText("Password");

        jLabel5.setText("CellNumber");

        txtCellNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCellNumberActionPerformed(evt);
            }
        });

        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(79, 79, 79)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(72, 72, 72)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                                .addComponent(txtCellNumber)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(80, 80, 80)
                            .addComponent(txtLastName))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btnRegister)
                            .addGap(19, 19, 19))
                        .addComponent(jLabel1))
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCellNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(31, 31, 31)
                .addComponent(btnRegister)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCellNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCellNumberActionPerformed
       
    }//GEN-LAST:event_txtCellNumberActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        handleRegistration();
        
      User user = User.getInstance();
      user.setFirstName(txtFirstName.getText());
      user.setLastName(txtLastName.getText());
      
      String Username = txtUsername.getText();
      String Password = txtPassword.getText();
      String CellNumber = txtCellNumber.getText();
      String FirstName = txtFirstName.getText();
      String LastName = txtLastName.getText();
      
  //Call validation and registration method
  String result = registerUser(Username, CellNumber, FirstName,LastName,Password);
  
  //Show result to the user
  JOptionPane.showMessageDialog(this,result);
  
  //Only go to login if registration passed
  if (result.equals("Registration successful!")){
      this.dispose(); //close the registration form
      new Login().setVisible(true);
  }
      
    }//GEN-LAST:event_btnRegisterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyRegistration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtCellNumber;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void handleRegistration() {
        String Username = txtUsername.getText();
        String CellNumber = txtCellNumber.getText();
        String FirstName =txtFirstName.getText();
        String LastName = txtLastName.getText();
        String Password = txtPassword.getText();
       
        
        //Call validation and registration method
        String result = registerUser(Username, CellNumber, FirstName, LastName, Password);
        
        //Show result to the user 
        JOptionPane.showMessageDialog(this,result);
         
        
        //Only go to login if registration passed
        if (result.equals("Registration successful!")) {
            User.getInstance().setCredentials(Username, Password); //Use singleton
            this.dispose(); // close the registration form
            new Login().setVisible(true);
            
        }
        
    }

   private String registerUser(String Username, String CellNumber, String FirstName, String LastName, String Password){
       //Check username validity
       if (!checkUsername(Username)) {
           return ("Username is not correctly formatted, please ensure that your username contains an underscore and is no more than five characters in length");
       }
       //check cellNumber validity
       if (!isCellNumberValid(CellNumber)){
           return("CellNumber incorrectly formatted or does not contain an international code.");
       }
       //check password complexity
       if (!checkPasswordComplexity(Password)) {
           return("Password is not correctly formatted please ensure tha the password contains at least eight character,a capital letter, a number, and a speacial character.");
        
       }
       //implement actual registration logic
       //For demostration, assume registration is successful
       return "Registration successful!";
       }
       //Check if username is valid
       public static boolean checkUsername(String Username) {
           if (Username == null) {
               System.out.println("Username is null");
               return false;
           }
           return Username.contains("_") && Username.length() <=5;
       }
       //Check if password id valid 
       public static boolean checkPasswordComplexity(String Password) {
           if (Password == null){
               System.out.println("Password is null");
               return false;
           }
           return Password.length() >=8
                   && Password.matches(".*[A-Z].*")
                   && Password.matches(".*[a-z].*")
                   && Password.matches(".*\\d.*")
                   && Password.matches(".*[!@#$%^&*()-_=+\\|[{]};:'\",<.>/?`~].*");
                   
       }
       public static boolean isCellNumberValid(String CellNumber) {
        //Regex to match a phone number with international code (e.g. +27 for South Africa)
        String regex = "^\\+27\\d{9}$";
        return CellNumber.matches(regex);
        
        
       }
       //Store login credentials
       public void storeLoginCredentials(String Username, String Password) {
           this.storeUsername = Username;
           this.storePassword = Password;
       }
       //Check login credentials
       public boolean checkLoginCredentials(String Username, String Password) {
           return Username.equals(storeUsername) && Password.equals(storePassword);
       }

    private boolean iscellNumberValid(String CellNumber) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
}
   
    
        
        
     
    

   
      
       
        

